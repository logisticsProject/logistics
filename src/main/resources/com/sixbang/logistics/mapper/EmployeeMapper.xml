<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sixbang.logistics.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.sixbang.logistics.domain.Employee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="workplace" jdbcType="VARCHAR" property="workplace" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="car_id" jdbcType="INTEGER" property="carId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sixbang.logistics.domain.Employee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into employee (`name`, workplace, role_id, 
      car_id)
    values (#{name,jdbcType=VARCHAR}, #{workplace,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{carId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.sixbang.logistics.domain.Employee">
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      workplace = #{workplace,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      car_id = #{carId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `name`, workplace, role_id, car_id
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, workplace, role_id, car_id
    from employee
  </select>
</mapper>